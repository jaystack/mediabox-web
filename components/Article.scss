@import "../scss/abstracts";

.article {
  position: relative;
  height: 100vh;
  padding: {
    left: 90px;
    right: 90px;
  }
  color: $white;
  background-color: #083140;
  overflow: hidden;

  @include breakpointDown($md) {
    padding: {
      left: 70px;
      right: 70px;
    }
  }

  @include breakpointDown($sm) {
    padding: {
      left: 50px;
      right: 50px;
    }
  }

  // Children

  &__inner {
    position: relative;
    z-index: 10;

    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    height: 100%;
    max-width: 85%;
    min-width: 75%;
    margin-left: auto;
    margin-right: auto;

    @include breakpointDown($xl) {
      max-width: 90%;
    }
    @include breakpointDown($lg) {
      max-width: 100%;
    }
    @include breakpointDown($md) {
      display: block;
    }
  }

  &__imageColumn {
    flex: 1;
  }

  &__contentColumn {
    flex: 1;
  }

  &__contentContainer {
    display: block;
  }

  &__image {
    display: block;
    max-width: 100%;
    width: auto;
    height: auto;
    object-fit: cover;
  }

  &__video {
    display: block;
  }

  &__title {
    margin: {
      top: 0;
      bottom: 8px;
    }
    text-align: left;
    font: {
      weight: 600;
      size: 56px;
    }
    letter-spacing: -1;
    line-height: $defaultLineHeight;

    @include breakpointDown($xl) {
      font-size: 48px;
    }

    @include breakpointDown($md) {
      font-size: 45px;
    }

    @include breakpointDown($sm) {
      font-size: 39px;
    }

    opacity: 1;
    transform: rotateX(5deg) scale(1);
    transform-origin: right top;
    transition: opacity 2.5s 0.1s, transform 1.2s ease-out 0s;
  }

  &__subTitle {
    margin: 0;
    letter-spacing: 1px;
    text-align: left;
    margin: {
      top: 1em;
      bottom: 1em;
    }
    opacity: 0.8;
    font: {
      size: 20px;
      weight: 600;
    }
    line-height: 40px;

    @include breakpointDown($lg) {
      font-size: 22.5px;
      line-height: 36px;
    }

    @include breakpointDown($md) {
      font-size: 17.5px;
      line-height: 28px;
    }
  }

  &__ctaButtonContainer {
    margin-top: 10px;
  }

  &__icon {
    position: absolute;
    top: -4.5em;
    left: 2em;
    z-index: 8;
    transform: translateX(-50%);
    border: 2px solid $blue;
    border-radius: 50%;
    width: 60px;
    height: 60px;
    line-height: 61px;
    text-align: center;

    &:before {
      line-height: 61px;
      font-size: 24px;
      color: $blue;
    }
  }

  // Modifiers

  &.-whiteTheme {
    color: $blackText;
    background-color: $white;
  }

  &.-topDiagonal {
    @extend %topDiagonal;
  }

  &.-bottomDiagonal {
    @extend %bottomDiagonal;
  }

  &.-autoHeight {
    padding: {
      top: 90px;
      bottom: 60px;
    }
    height: auto;

    &.-topDiagonal {
      padding-top: 200px;
    }

    &.-bottomDiagonal {
      padding-bottom: 200px;
    }
  }
}

// CONTENT
.article__contentColumn {
  font-size: 20px;
  ul {
    margin-top: 30px;
    margin-bottom: 30px;
    & > li {
      list-style: none;
      left: 0;
      font-weight: 200;
      font-size: 20px;
      opacity: 0.8;
      line-height: $defaultLineHeight;
      margin-bottom: 5px;

      transition: transform 1s 0.7s, opacity 1s 0.5s;
      &::before {
        content: "\f061";
        display: inline-block;
        font-family: "FontAwesome";
        font-size: 16px;
        color: $blue;
        margin: 0 15px 0 -40px;
      }
    }
  }

  p {
    line-height: 1.4em;
    font: {
      size: 20;
      weight: 200;
    }
    @include breakpointDown($sm) {
      font-size: 16px;
    }
  }
}

.article__content.-appear ul li {
  opacity: 0;
  transform: translateX(-6%) translateY(-20%);
}

.article__title.-appear {
  opacity: 0;
  transform: rotateX(100deg) rotateY(-40deg) scale(1);
}

// content modifiers
.article.-boldArticleListItem .article__contentColumn ul > li {
  font-weight: 600;
}

.article.-tallArticleListItem .article__contentColumn {
  ul {
    margin-top: 2em;
    & > li {
      line-height: 1.7em;
    }
  }
}

.article.-darkArticleBullet .article__contentColumn {
  ul > li:before {
    color: $blueDark;
  }
}
